// Template Source: BaseMethodParameterSet.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;


import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.google.gson.JsonObject;
import java.util.EnumSet;
import java.util.ArrayList;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the User Validate Properties Parameter Set.
 */
public class UserValidatePropertiesParameterSet {
    /**
     * The display Name.
     * 
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
	@Nullable
    public String displayName;

    /**
     * The mail Nickname.
     * 
     */
    @SerializedName(value = "mailNickname", alternate = {"MailNickname"})
    @Expose
	@Nullable
    public String mailNickname;

    /**
     * The on Behalf Of User Id.
     * 
     */
    @SerializedName(value = "onBehalfOfUserId", alternate = {"OnBehalfOfUserId"})
    @Expose
	@Nullable
    public java.util.UUID onBehalfOfUserId;


    /**
     * Instiaciates a new UserValidatePropertiesParameterSet
     */
    public UserValidatePropertiesParameterSet() {}
    /**
     * Instiaciates a new UserValidatePropertiesParameterSet
     * @param builder builder bearing the parameters to initialize from
     */
    protected UserValidatePropertiesParameterSet(@Nonnull final UserValidatePropertiesParameterSetBuilder builder) {
        this.displayName = builder.displayName;
        this.mailNickname = builder.mailNickname;
        this.onBehalfOfUserId = builder.onBehalfOfUserId;
    }
    /**
     * Gets a new builder for the body
     * @return a new builder
     */
    @Nonnull
    public static UserValidatePropertiesParameterSetBuilder newBuilder() {
        return new UserValidatePropertiesParameterSetBuilder();
    }
    /**
     * Fluent builder for the UserValidatePropertiesParameterSet
     */
    public static final class UserValidatePropertiesParameterSetBuilder {
        /**
         * The displayName parameter value
         */
        @Nullable
        protected String displayName;
        /**
         * Sets the DisplayName
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public UserValidatePropertiesParameterSetBuilder withDisplayName(@Nullable final String val) {
            this.displayName = val;
            return this;
        }
        /**
         * The mailNickname parameter value
         */
        @Nullable
        protected String mailNickname;
        /**
         * Sets the MailNickname
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public UserValidatePropertiesParameterSetBuilder withMailNickname(@Nullable final String val) {
            this.mailNickname = val;
            return this;
        }
        /**
         * The onBehalfOfUserId parameter value
         */
        @Nullable
        protected java.util.UUID onBehalfOfUserId;
        /**
         * Sets the OnBehalfOfUserId
         * @param val the value to set it to
         * @return the current builder object
         */
        @Nonnull
        public UserValidatePropertiesParameterSetBuilder withOnBehalfOfUserId(@Nullable final java.util.UUID val) {
            this.onBehalfOfUserId = val;
            return this;
        }
        /**
         * Instanciates a new UserValidatePropertiesParameterSetBuilder
         */
        @Nullable
        protected UserValidatePropertiesParameterSetBuilder(){}
        /**
         * Buils the resulting body object to be passed to the request
         * @return the body object to pass to the request
         */
        @Nonnull
        public UserValidatePropertiesParameterSet build() {
            return new UserValidatePropertiesParameterSet(this);
        }
    }
    /**
     * Gets the functions options from the properties that have been set
     * @return a list of function options for the request
     */
    @Nonnull
    public java.util.List<com.microsoft.graph.options.FunctionOption> getFunctionOptions() {
        final ArrayList<com.microsoft.graph.options.FunctionOption> result = new ArrayList<>();
        if(this.displayName != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("displayName", displayName));
        }
        if(this.mailNickname != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("mailNickname", mailNickname));
        }
        if(this.onBehalfOfUserId != null) {
            result.add(new com.microsoft.graph.options.FunctionOption("onBehalfOfUserId", onBehalfOfUserId));
        }
        return result;
    }
}
